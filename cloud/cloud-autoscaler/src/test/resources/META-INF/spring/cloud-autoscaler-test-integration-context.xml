<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"

       xsi:schemaLocation="
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.1.xsd">

    <context:property-placeholder location="
        classpath*:/META-INF/properties/system.properties,
        classpath*:/META-INF/properties/infrastructure.properties,
        classpath*:/META-INF/properties/healthmonitoring.properties,
        classpath*:/META-INF/properties/autoscalertest.properties" />

    <import resource="classpath*:META-INF/spring/cloud-context-service.xml" />
    <import resource="classpath*:META-INF/spring/cloud-context-repository.xml" />

    <context:component-scan base-package="org.openinfinity.cloud.autoscaler" />
    <context:component-scan base-package="org.openinfinity.cloud.notifier" />

    <bean id="scheduledJobLauncherTestUtils" class="org.springframework.batch.test.JobLauncherTestUtils"
          p:job-ref="scheduledJob"/>

    <bean id="periodicJobLauncherTestUtils" class="org.springframework.batch.test.JobLauncherTestUtils"
          p:job-ref="periodicJob"/>

    <jdbc:embedded-database id="cloudDataSource">
        <jdbc:script location="classpath*:META-INF/sql/openinfinity-schema.sql"/>
        <jdbc:script location="classpath:/org/springframework/batch/core/schema-drop-hsqldb.sql"/>
        <jdbc:script location="classpath:/org/springframework/batch/core/schema-hsqldb.sql"/>
    </jdbc:embedded-database>

    <bean class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="cloudDataSource" />
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="cloudDataSource" />
    </bean>

    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="cloudDataSource" p:transactionManager-ref="txManager" />

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <batch:job id="periodicJob">
        <batch:step id="stepP1">
            <batch:tasklet transaction-manager="txManager"
                           start-limit="3">
                <batch:chunk reader="periodicAutoscalerItemReader" processor="periodicAutoscalerItemProcessor"
                             writer="periodicAutoscalerItemWriter" commit-interval="100" retry-limit="3">
                    <batch:retryable-exception-classes>
                        <batch:include class="org.springframework.dao.OptimisticLockingFailureException" />
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" />
                    </batch:retryable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <batch:job id="scheduledJob">
        <batch:step id="scheduledJobStep1">
            <batch:tasklet transaction-manager="txManager"
                           start-limit="2">
                <batch:chunk reader="scheduledAutoscalerItemReader" processor="scheduledAutoscalerItemProcessor"
                             writer="scheduledAutoscalerItemWriter" commit-interval="1" />
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="periodicAutoscalerItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="cloudDataSource"/>
        <property name="sql" value="select * from machine_tbl where machine_type = 'loadbalancer'"/>
        <property name="rowMapper">
            <bean id="machineRowMapper" class="org.openinfinity.cloud.domain.repository.administrator.MachineRowMapper"/>
        </property>
    </bean>

    <bean id="scheduledAutoscalerItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="cloudDataSource"/>
        <property name="sql" value="select * from scaling_rule_tbl where scheduled = 1"/>
        <property name="rowMapper">
            <bean id="scalingRuleRowMapper" class="org.openinfinity.cloud.domain.repository.scaling.ScalingRuleRowMapper"/>
        </property>
    </bean>

    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host">
            <value>${email.host}</value>
        </property>
    </bean>

    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from">
            <value>${email.from}</value>
        </property>
        <property name="to">
            <value>${email.to}</value>
        </property>
        <property name="subject">
            <value>"Autoscaler automated integration test notification"</value>
        </property>
    </bean>

</beans>