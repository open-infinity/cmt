<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">
       
    <context:property-placeholder 
    	location="classpath:/META-INF/properties/system.properties,
    	classpath:/META-INF/properties/infrastructure.properties,
    	classpath:/META-INF/properties/jets3.properties,
    	classpath:/META-INF/properties/repository.properties" />  
     
    <context:component-scan base-package="org.openinfinity"/>   
        		    
	<import resource="classpath*:/META-INF/spring/cloud-context-util.xml" />
	<import resource="classpath*:/META-INF/spring/cloud-context-core.xml" />
	<import resource="classpath*:/META-INF/spring/cloud-context-repository.xml" />
	<import resource="classpath*:/META-INF/spring/cloud-context-service.xml" />
		
	<bean id="txManager" 
	    class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="cloudDataSource" /> 	
	
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
		p:dataSource-ref="cloudDataSource"
		p:transactionManager-ref="txManager" />
	
	
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
		p:jobRepository-ref="jobRepository" />
	
<!-- 	static final int CLUSTER_TYPE_PORTAL = 0; -->
<!-- 	static final int CLUSTER_TYPE_MULE_MQ = 1; -->
<!-- 	static final int CLUSTER_TYPE_PENTAHO = 2; -->
<!-- 	static final int CLUSTER_TYPE_BIGDATA = 3; -->
<!-- 	static final int CLUSTER_TYPE_DATABASE = 4; -->
<!-- 	static final int CLUSTER_TYPE_BAS = 5; -->
<!-- 	static final int CLUSTER_TYPE_NOSQL = 6; -->
<!-- 	static final int CLUSTER_TYPE_IDENTITY_GATEWAY = 7; -->

	<bean id="periodicCloudDeployerWriter" class="org.openinfinity.cloud.application.deployer.batch.PeriodicCloudDeployerWriter">
		<property name="deploymentHostPort" value="22" />
		<property name="username" value="root" />
		<property name="fileSystemUser" value="toas" />
		<property name="fileSystemGroup" value="toas" />
		<property name="pathToDeploymentDirectoryMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="0" value="/opt/openinfinity/2.0.0/deploy/"/>
				<entry key="1" value="/opt/openinfinity/2.0.0/tomcat/apache-tomcat-7.0.27/webapps"/>
				<entry key="2" value="/opt/openinfinity/2.0.0/tomcat/webapps/"/>
				<entry key="3" value="/opt/openinfinity/2.0.0/hadoop/"/>
				<entry key="4" value="/opt/openinfinity/2.0.0/mariadb/"/>
				<entry key="5" value="/opt/openinfinity/2.0.0/tomcat/webapps/"/>
				<entry key="6" value="/opt/openinfinity/2.0.0/mongodb/"/>
				<entry key="7" value="/opt/openinfinity/2.0.0/tomcat/apache-tomcat-7.0.27/webapps/"/>
			</map>
		</property>
		<property name="keyService" ref="keyService" />
		<property name="machineTypeService" ref="machineTypeService" />
		<property name="clusterService" ref="clusterService" />
		<property name="instanceService" ref="instanceService" />
		
		<property name="deploymentDirectoryMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="portal-war" value="/opt/openinfinity/2.0.0/deploy/"/>
				<entry key="portal-properties" value="/opt/data"/>
				<entry key="bas-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="bas-properties" value="/opt/data"/>
				<entry key="5-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="5-properties" value="/opt/data"/>
				<entry key="mq-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="mq-properties" value="/opt/data"/>
			</map>
		</property>
		<property name="unDeploymentDirectoryMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="portal-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="portal-properties" value="/opt/data"/>
				<entry key="bas-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="bas-properties" value="/opt/data"/>
				<entry key="5-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="5-properties" value="/opt/data"/>
				<entry key="mq-war" value="/opt/openinfinity/2.0.0/tomcat/webapps"/>
				<entry key="mq-properties" value="/opt/data"/>
			</map>
		</property>

		<property name="deploymentCommandsMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="portal-war.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="portal-properties.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="bas-war.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="bas-properties.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="5-war.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="5-properties.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="mq-war.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
				<entry key="mq-properties.1" value="chown #%fileSystemUser%#.#%fileSystemGroup%# #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#"/>
			</map>
		</property>

		<property name="unDeploymentCommandsMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="portal-war.1" value="su toas -c 'rm  #%unDeploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="portal-war.2" value="su toas -c 'rm -r #%unDeploymentDirectory%#/#%deploymentName%#'"/>				
				<entry key="portal-properties.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="bas-war.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="bas-properties.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="5-war.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="5-properties.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="mq-war.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
				<entry key="mq-properties.1" value="su toas -c 'rm #%deploymentDirectory%#/#%deploymentName%#.#%deploymentType%#'"/>
			</map>
		</property>
		
	</bean>
	
<!-- 	<bean id="periodicCloudDeployerWriter" class="org.openinfinity.cloud.application.deployer.batch.PeriodicCloudDeployerWriter"> -->
<!-- 		<property name="deploymentHostPort" value="${deploymentHostPort}" /> --> 
<!-- 		<property name="username" value="${technicalUsername}" /> --> 
<!-- 		<property name="deploymentHostPort" value="22" /> -->
<!-- 		<property name="username" value="root" /> -->
<!-- 		<property name="fileSystemUser" value="toas" /> -->
<!-- 		<property name="fileSystemGroup" value="toas" /> -->
<!-- 		<property name="pathToDeploymentDirectoryMap"> -->
<!-- 			<map key-type="java.lang.String" value-type="java.lang.String"> -->
<!-- 				<entry key="portal" value="/opt/openinfinity/tomcat/deploy/"/> -->
<!-- 				<entry key="bas" value="/opt/openinfinity/tomcat/apache-tomcat-7.0.27/webapps/"/> -->
<!-- 				<entry key="service" value="/opt/openinfinity/tomcat/apache-tomcat-7.0.27/webapps"/> -->
<!-- 				<entry key="analytics" value="/opt/openinfinity/tomcat/apache-tomcat-7.0.27/webapps/"/> -->
<!-- 				<entry key="ig" value="/opt/openinfinity/tomcat/apache-tomcat-7.0.27/webapps/"/> -->
<!-- 				<entry key="ee" value="/opt/openinfinity/tomcat/apache-tomcat-7.0.27/webapps/"/> -->
<!-- 				<entry key="ecm" value="/opt/openinfinity/tomcat/apache-tomcat-7.0.27/webapps/"/> -->
<!-- 				<entry key="bigdata" value="/opt/openinfinity/hadoop/"/> -->
<!-- 				<entry key="db" value="/opt/openinfinity/mariadb/"/> -->
<!-- 				<entry key="nosql" value="/opt/openinfinity/mongodb/"/> -->
<!-- 			</map> -->
<!-- 		</property> -->
<!-- 		<property name="keyService" ref="keyService" /> -->
<!-- 		<property name="machineTypeService" ref="machineTypeService" /> -->
<!-- 		<property name="clusterService" ref="clusterService" /> -->
<!-- 		<property name="instanceService" ref="instanceService" /> -->
<!-- 	</bean> -->
	
<!-- 	ORIGINAL -->
<!-- 	<batch:job id="cloudDeployerBatchJob"> -->
<!-- 		<batch:step id="stepP1"> -->
<!-- 			<batch:tasklet transaction-manager="txManager" -->
<!-- 				start-limit="3"> -->
<!-- 				<batch:chunk  -->
<!-- 					reader="periodicCloudDeployerReader"  -->
<!-- 					processor="periodicCloudDeployerProcessor" -->
<!-- 					writer="periodicCloudDeployerWriter"  -->
<!-- 					commit-interval="100"  -->
<!-- 					retry-limit="3"> -->
<!-- 					<batch:retryable-exception-classes> -->
<!--                     	<batch:include class="org.springframework.dao.OptimisticLockingFailureException" /> -->
<!--                         <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" /> -->
<!--                     </batch:retryable-exception-classes> -->
<!--                 </batch:chunk> -->
<!-- 			</batch:tasklet> -->
<!-- 		</batch:step>	 -->
<!-- 	</batch:job> -->
	
<!-- 	<task:scheduled-tasks>   -->
<!-- 	    <task:scheduled ref="periodicCloudDeployerLauncher" method="launch" cron="*/10 * * * * ?"/> -->
<!-- 	</task:scheduled-tasks> -->
		
	<!-- Use executor for asyncronous launching  -->
	<!-- 
	<bean id="taskExecutor"
	  class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	  <property name="corePoolSize" value="10"/>
	  <property name="maxPoolSize" value="15"/>
	</bean>
	<batch:job id="cloudDeployerBatchJob">
		<batch:step id="stepP1">
			<batch:tasklet task-executor="taskExecutor" throttle-limit="10" transaction-manager="txManager"
				start-limit="1">
				<batch:chunk 
					reader="periodicCloudDeployerReader" 
					processor="periodicCloudDeployerProcessor"
					writer="periodicCloudDeployerWriter" 
					commit-interval="1" 
					retry-limit="1">
					<batch:retryable-exception-classes>
                    	<batch:include class="org.springframework.dao.OptimisticLockingFailureException" />
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" />
                    </batch:retryable-exception-classes>
                </batch:chunk>
			</batch:tasklet>
		</batch:step>	
	</batch:job>
	 -->

	<batch:job id="cloudDeployerBatchJob">
		<batch:step id="stepP1">
			<batch:tasklet transaction-manager="txManager"
				start-limit="1">
				<batch:chunk 
					reader="periodicCloudDeployerReader" 
					processor="periodicCloudDeployerProcessor"
					writer="periodicCloudDeployerWriter" 
					commit-interval="1" 
					retry-limit="1">
					<batch:retryable-exception-classes>
                    	<batch:include class="org.springframework.dao.OptimisticLockingFailureException" />
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" />
                    </batch:retryable-exception-classes>
                </batch:chunk>
			</batch:tasklet>
		</batch:step>	
	</batch:job>
	 
	<batch:job id="cloudStagingAreaJob">
		<batch:step id="stepSA1">
			<batch:tasklet transaction-manager="txManager"
				start-limit="1">
				<batch:chunk 
					reader="periodicStagingAreaReader" 
					processor="periodicStagingAreaProcessor"
					writer="periodicStagingAreaWriter" 
					commit-interval="1" 
					retry-limit="1">
					<batch:retryable-exception-classes>
                    	<batch:include class="org.springframework.dao.OptimisticLockingFailureException" />
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" />
                    </batch:retryable-exception-classes>
                </batch:chunk>
			</batch:tasklet>
		</batch:step>	
	</batch:job>
	
	
	<task:scheduled-tasks>  
	    <task:scheduled ref="periodicCloudDeployerLauncher" method="launch" cron="*/20 * * * * ?"/>
	</task:scheduled-tasks>
		
	<!--  Refactoring writer execution expendability. Platform specific deploy classes  -->
	<!-- Implemented with ssh command execution maps
	<bean id="applicationContextProvider" class="org.openinfinity.cloud.application.deployer.batch.ApplicationContextProvider"></bean>	
	<context:component-scan base-package="org.openinfinity.cloud.application.deployer.batch.executor" />
	-->
	
</beans>