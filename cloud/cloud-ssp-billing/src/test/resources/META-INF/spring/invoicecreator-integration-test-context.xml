<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!--
    <context:property-override location="classpath:override.properties"/>
    -->
    <!--
    <context:property-override location="classpath*:/META-INF/properties/ssp.properties"/>
    -->
   <!--
   <jdbc:initialize-database data-source="cloudDataSource">
       <jdbc:script location="file:${basedir}/../cloud-repository/src/test/resources/sql/cloud/H2/create_tables.sql"/>
       <jdbc:script location="classpath*:META-INF/sql/cloud/ds_invoice_creator.sql"/>
   </jdbc:initialize-database>

   <jdbc:initialize-database data-source="sspDataSource">
       <jdbc:script location="file:${basedir}/../cloud-repository/src/test/resources/sql/ssp/create_tables.sql"/>
       <jdbc:script location="classpath*:META-INF/sql/ssp/ds_invoice_creator.sql"/>
   </jdbc:initialize-database>
    -->

    <import resource="classpath*:META-INF/spring/cloud-context-service.xml" />
    <import resource="classpath*:META-INF/spring/cloud-context-repository.xml" />

    <context:component-scan base-package="org.openinfinity.cloud.ssp.billing.invoicecreator"/>

    <bean class="org.springframework.batch.test.JobLauncherTestUtils"
          p:job-ref="invoiceCreationJob"/>

    <jdbc:embedded-database id="springBatchDataSource">
        <jdbc:script location="classpath:/org/springframework/batch/core/schema-drop-h2.sql"/>
        <jdbc:script location="classpath:/org/springframework/batch/core/schema-h2.sql"/>
    </jdbc:embedded-database>


    <jdbc:embedded-database id="cloudDataSource">
        <!--
        <jdbc:script location="file:/home/vedran/workspace/toas/github/cmt/cloud/cloud-repository/src/test/resources/sql/cloud/H2/create_tables.sql"/>
        <jdbc:script location="file:${basedir}/../cloud-repository/src/test/resources/sql/cloud/H2/create_tables.sql"/>
        <jdbc:script location="classpath*:META-INF/sql/cloud/ds_invoice_creator.sql"/>
        -->
    </jdbc:embedded-database>

    <jdbc:embedded-database id="sspDataSource">
        <!--
        <jdbc:script location="file:${basedir}/../cloud-repository/src/test/resources/sql/ssp/create_tables.sql"/>

        <jdbc:script location="file:/home/vedran/workspace/toas/github/cmt/cloud/cloud-repository/src/test/resources/sql/ssp/create_tables.sql"/>

        <jdbc:script location="classpath*:META-INF/sql/ssp/ds_invoice_creator.sql"/>
        -->
    </jdbc:embedded-database>

    <bean id="cloudTxManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="cloudDataSource" />

    <bean id="sspTxManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="sspDataSource" />

    <bean id="springBatchTxManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="springBatchDataSource" />

    <bean id="jobRepository" class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
          p:dataSource-ref="springBatchDataSource"
          p:transactionManager-ref="springBatchTxManager" />

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher"
          p:jobRepository-ref="jobRepository" />

    <bean id="accountReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="sspDataSource"/>
        <property name="sql" value="select * from account"/>
        <property name="rowMapper">
            <bean id="accountRowMapper" class="org.openinfinity.cloud.domain.repository.ssp.AccountRowMapper"/>
        </property>
    </bean>

    <batch:job id="invoiceCreationJob">
        <batch:step id="createInvoice">
            <batch:tasklet transaction-manager="springBatchTxManager"
                           start-limit="3">
                <batch:chunk reader="accountReader" processor="invoiceCreatorItemProcessor"
                             writer="invoiceCreatorItemWriter" commit-interval="100" retry-limit="3">
                    <batch:retryable-exception-classes>
                        <batch:include class="org.springframework.dao.OptimisticLockingFailureException" />
                        <batch:include class="org.springframework.dao.DeadlockLoserDataAccessException" />
                    </batch:retryable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

</beans>