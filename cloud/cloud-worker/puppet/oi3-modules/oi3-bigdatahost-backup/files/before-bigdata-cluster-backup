#!/bin/sh

# In case of MongoDB, the following procedure is followed:
# http://docs.mongodb.org/manual/tutorial/backup-sharded-cluster-with-database-dumps/

source /opt/openinfinity/3.1.0/backup/common/bigdata-common

if [ "x$BIGDATA_ROLE" = "x" ] ; then
    echo "Can't prepare cluster backup because this node is not part of a bigdata/nosql cluster" >/dev/stderr
    exit 1
elif [ "$BIGDATA_ROLE" = "config" ] ; then
    # --------------------------------------------------------------------------
    # 1. Disable Mongo balancer process
    # --------------------------------------------------------------------------
    mongo localhost:27017 <<EOF
    if (sh.isBalancerRunning() == true) sh.setBalancerState(false);
    while( sh.isBalancerRunning() ) {
        print("waiting for balancer to stop...");
        sleep(1000);
    }   
    exit;
EOF
    # --------------------------------------------------------------------------
    # 2b. Shutdown one of the config servers
    # --------------------------------------------------------------------------
    if [ "$HOSTNAME" = "$MONGO_CFG_SERVER1" ] ; then
        echo "Stopping config server"
        /etc/init.d/mongo-cfgsrv stop || exit 1
    fi
elif [ "$BIGDATA_ROLE" = "shard" ] ; then
    # Wait until balancer is stopped
    echo "Wait until balancer is stopped"
    mongo $MONGO_CFG_SERVER1:27017 <<EOF
    while( sh.isBalancerRunning() ) {
        print("waiting for balancer to stop...");
        sleep(1000);
    }   
EOF

    # --------------------------------------------------------------------------
    # 2a. Shutdown one member of each replica set.
    # --------------------------------------------------------------------------
    # TODO: check replica set member role
    if [ "$HOSTNAME" = "$MONGO_RSET_MEMBER1" ] ; then
        /etc/init.d/mongod stop || exit 1
    fi
else
    # TODO: Hadoop support?
    echo "At moment other than MongoDB bigdata backups are not supported." >/dev/stderr
    exit 1
fi

